{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAiBeA,EAfF,SAAEC,GAAY,IACjBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA2BF,EAA3B,YAA0CG,IAAI,YACtD,gCACE,6BAAKL,IACL,4BAAIC,IACJ,4BAAIC,WCaGI,EApBE,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OACnB,OACE,8BAGIA,EAAOC,KAAK,SAAEC,EAAMC,GAClB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAQG,GAAIR,GAChBF,KAAMO,EAAQG,GAAIV,KAClBC,MAAOM,EAAQG,GAAIT,OAHdS,SCCJC,EAZG,SAAC,GAAoC,EAAjCC,YAAkC,IAArBC,EAAoB,EAApBA,aACjC,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,oCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCMHI,EAVA,SAAElB,GACf,OACE,qBAAKmB,MAAO,CACVC,UAAW,SAAUC,OAAQ,SAD/B,SAGIrB,EAAMsB,YCyCCC,G,wDAxCb,aAAgB,IAAD,8BACb,gBAaFC,eAAiB,SAAEC,GACjB,EAAKC,SAAU,CAAEb,YAAaY,EAAME,OAAOC,SAZ3C,EAAKC,MAAQ,CACXrB,OAAQ,GACRK,YAAa,IALF,E,gEAQO,IAAD,OACnBiB,MAAO,8CACJC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKR,SAAU,CAAElB,OAAQ0B,S,+BAOlC,IAAD,EACwBC,KAAKN,MAA7BrB,EADA,EACAA,OAAQK,EADR,EACQA,YACVuB,EAAiB5B,EAAO6B,QAAQ,SAAAC,GACpC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAU3B,EAAY0B,kBAIxD,OAAU/B,EAAOiC,OAGb,sBAAKrC,UAAU,KAAf,UACE,oBAAIA,UAAU,WAAd,yBACA,cAAC,EAAD,CAAWU,aAAcqB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhB,OAAQ4B,SANxB,gD,GA3BYM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAgB,SAKnDX,M","file":"static/js/main.af03216b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ( props ) => {\n  const { name, email, id } = props\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${ id }?200x200`} alt=\"profile\" />\n      <div >\n        <h2>{name}</h2>\n        <p>{email}</p>\n        <p>{id}</p>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Card","import React from 'react';\nimport Card from './Card'\n\nconst CardList = ( { robots } ) => {\n  return (\n    <div>\n\n      {\n        robots.map( ( user, i ) => {\n          return (\n            <Card\n              key={i}\n              id={robots[ i ].id}\n              name={robots[ i ].name}\n              email={robots[ i ].email}\n            />\n          )\n        } )\n      }\n    </div>\n  )\n}\n\nexport default CardList","const SearchBox = ( { searchfield, searchChange } ) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba ba--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\nexport default SearchBox","import React from 'react'\n\n\nconst Scroll = ( props ) => {\n  return (\n    <div style={{\n      overflowY: 'scroll', height: '600px'\n    }} >\n      { props.children}\n    </div >\n  )\n}\n\nexport default Scroll","import React, { Component } from 'react'\nimport CardList from \"../components/CardList\"\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\n// import { robots } from './robots'\nimport './App.css'\n\n\nclass App extends Component {\n  constructor () {\n    super()\n    // declare state here / Smart components use CLASS syntax\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n  componentDidMount () {\n    fetch( 'https://jsonplaceholder.typicode.com/users' )\n      .then( response => response.json() )\n      .then( users => this.setState( { robots: users } ) )\n  }\n\n  onSearchChange = ( event ) => {\n    this.setState( { searchfield: event.target.value } )\n  }\n\n  render () {\n    const { robots, searchfield } = this.state;  // destructuring this.state to access properties\n    const filteredRobots = robots.filter( robot => {\n      return robot.name.toLowerCase().includes( searchfield.toLowerCase() )\n    } )\n\n    // loading screen in case fetch takes too long\n    return ( !robots.length ) ?\n      <h1>Loading...</h1> :\n      (\n        <div className=\"tc\" >\n          <h1 className=\"f1 white\">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </div>\n      )\n\n  }\n\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';  // A view library that does the DOM manipulation\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}